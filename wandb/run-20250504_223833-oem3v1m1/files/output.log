Initialized SimpleAdapter: Input Dim=512, Output Dim=256, Seq Len=1
Loading model and processor from facebook/detr-resnet-50...
[2025-05-04 22:38:35,522][timm.models._builder][INFO] - Loading pretrained weights from Hugging Face hub (timm/resnet50.a1_in1k)
[2025-05-04 22:38:35,637][timm.models._hub][INFO] - [timm/resnet50.a1_in1k] Safe alternative available for 'pytorch_model.bin' (as 'model.safetensors'). Loading weights using safetensors.
[2025-05-04 22:38:35,667][timm.models._builder][INFO] - Missing keys (fc.weight, fc.bias) discovered while loading pretrained weights. This is expected if model is being adapted.
Some weights of the model checkpoint at facebook/detr-resnet-50 were not used when initializing DetrForObjectDetection: ['model.backbone.conv_encoder.model.layer1.0.downsample.1.num_batches_tracked', 'model.backbone.conv_encoder.model.layer2.0.downsample.1.num_batches_tracked', 'model.backbone.conv_encoder.model.layer3.0.downsample.1.num_batches_tracked', 'model.backbone.conv_encoder.model.layer4.0.downsample.1.num_batches_tracked']
- This IS expected if you are initializing DetrForObjectDetection from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing DetrForObjectDetection from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
DETR decoder trainable
DETR prediction heads are trainable.
AdapterDetrModel initialized.
No checkpoint found, starting from scratch.
Training started
Error executing job with overrides: []
Traceback (most recent call last):
  File "/home/hertrich/VI_project/ODCE/main.py", line 106, in main
    loss_dict = criterion(outputs, targets)
  File "/home/hertrich/.local/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/hertrich/.local/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/hertrich/VI_project/ODCE/detr/models/detr.py", line 225, in forward
    indices = self.matcher(outputs_without_aux, targets)
  File "/home/hertrich/.local/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/hertrich/.local/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/hertrich/.local/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/home/hertrich/VI_project/ODCE/detr/models/matcher.py", line 62, in forward
    tgt_ids = torch.cat([v["labels"] for v in targets])
RuntimeError: zero-dimensional tensor (at position 0) cannot be concatenated

Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
